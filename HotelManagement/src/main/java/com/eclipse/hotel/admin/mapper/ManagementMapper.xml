<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper     
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eclipse.hotel.admin.mapper.ManagementMapper">

<!-- 객실sql -->
<!-- <sql id="roomSearch">
<where>
   p.price = i.price
   <if test="rname!=null">and i.rname like '%'||#{rname}||'%' </if>
</where>
</sql> -->

<!-- 결제sql -->
<sql id="paySearch">
<where>
   p.reservecode = r.reservecode
   and r.m_num = m.m_num
   and r.rnum = i.rnum
   <if test="word!=null and searchType=='name'">and m.name like '%${word}%' </if>
   <if test="word!=null and searchType=='id'">and m.id like '%${word}%' </if>
</where>
</sql>

<!-- 객실 전체목록 -->
<select id="roomlist" parameterType="map" resultType="r_infoVO">
select * 
from (select rownum numrow, aa.* from ( select p.price, p.season, p.nonseason, i.rnum, i.rname, i.rsize, i.rtype, i.standperson, i.max_person, i.img
      from room_price p, room_info i  
      WHERE p.price = i.price  
      and i.rname like '%'||#{rname}||'%'
      order by i.rnum) aa) 
where numrow &gt;= #{startRow} 
and numrow &lt;= #{endRow}
</select>

<!-- 객실 수 -->
<select id="roomcount" resultType="int" parameterType="String">
select count(*) 
from room_price p, room_info i
where p.price = i.price
and i.rname like '%'||#{rname}||'%'
</select>

<!-- 객실 상세보기 -->
<select id="roomdetail" parameterType="int" resultType="r_infoVO">
select * 
from room_info i , room_price p
where rnum = #{rnum}
and i.price = p.price
</select>   

<!-- 객실요금표 -->
<select id="roomprice" resultType="r_priceVO">
select * 
from room_price 
order by price
</select>

<!-- 객실정보수정 -->
<update id="roomupdate" parameterType="r_infoVO">
update room_info 
set rnum = #{rnum}, rsize = #{rsize}, rname = #{rname}, rtype = #{rtype}, 
standperson = #{standperson}, max_person = #{max_person}, price = #{price}
,memo = #{memo}
where rnum = #{rnum}
</update>

<!-- 객실삭제 -->
<delete id="roomdelete" parameterType="int">
delete from room_info where rnum = #{rnum} 
</delete>

<!-- 객실등록 -->
<insert id="roominsert" parameterType="r_infoVO">
insert into room_info
values(#{rnum}, #{rname}, #{rsize}, #{rtype}, #{standperson}, #{max_person}, #{img}, #{price}, #{memo})
</insert>

<!-- 객실요금수정 -->
<update id="priceupdate" parameterType="r_priceVO">
update room_price
set season = #{season}, nonseason = #{nonseason}
where price = #{price}
</update>

<!-- 결제목록 -->
<select id="paylist" parameterType="map" resultType="payVO">
select * 
from (select rownum numrow, aa.* from ( select p.P_NUM, p.RESERVECODE, p.P_DATE, p.p_price, decode(p.p_cancel,null,' ',p.p_cancel)as p_cancel , m.ID, m.NAME, r.CHECK_IN, r.CHECK_OUT, r.RNUM, i.RNAME, i.RTYPE, i.img
      from payment p, member m, room_reserve r, room_info i 
      <include refid="paySearch"/>
      order by i.rnum) aa) 
where numrow &gt;= #{startRow} 
and numrow &lt;= #{endRow}
</select>

<!-- 결제건수 -->
<select id="paycount" resultType="int">
select count(*)
from payment p, member m, room_reserve r, room_info i
<include refid="paySearch"/>
</select>

<!-- 결제총액 -->
<select id="paytotal" resultType="int">
select decode(sum(p.p_price), null, 0, sum(p.p_price))as "sum(p_price)"
from payment p, member m, room_reserve r, room_info i
where p.reservecode = r.reservecode
   and p_cancel is null
   and r.m_num = m.m_num
   and r.rnum = i.rnum
   <if test="word!=null and searchType=='name'">and m.name like '%${word}%' </if>
   <if test="word!=null and searchType=='id'">and m.id like '%${word}%' </if>
</select>

<!-- 결제취소 -->
<update id="paycancel" parameterType="payVO">
update payment
set p_date = '', p_cancel = sysdate
where p_num = #{p_num}
</update>

<!-- 결제취소여부확인 -->
<select id="cancelcheck" parameterType="int" resultType="int">
select count(p_num) from payment
where p_num = #{p_num}
and p_date is null
</select>

</mapper>